
import React from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Progress } from '@/components/ui/progress';
import { Button } from '@/components/ui/button';
import { 
  Brain, 
  TrendingUp, 
  Users, 
  Target, 
  Code, 
  Award,
  Sparkles,
  Loader2,
  CheckCircle,
  Info,
  AlertCircle
} from 'lucide-react';
import type { CareerEnrichment, CareerNarrative } from '@/types/enrichment';
import { useEnrichResume } from '@/hooks/useEnrichment';

interface InsightCardProps {
  versionId: string;
  enrichment?: CareerEnrichment;
  narratives: CareerNarrative[];
  isLoading?: boolean;
}

export const InsightCard: React.FC<InsightCardProps> = ({
  versionId,
  enrichment,
  narratives,
  isLoading
}) => {
  const enrichResumeMutation = useEnrichResume();

  const handleTriggerEnrichment = () => {
    enrichResumeMutation.mutate(versionId);
  };

  if (isLoading || enrichResumeMutation.isPending) {
    return (
      <Card className="border-blue-200 bg-blue-50/50">
        <CardHeader>
          <CardTitle className="flex items-center gap-2 text-blue-800">
            <Loader2 className="w-4 h-4 animate-spin" />
            Generating AI Career Insights...
          </CardTitle>
          <CardDescription>
            OpenAI is analyzing your career profile and generating personalized insights
          </CardDescription>
        </CardHeader>
        <CardContent>
          <div className="space-y-3">
            <div className="flex items-center gap-2 text-sm text-blue-600">
              <div className="w-2 h-2 bg-blue-400 rounded-full animate-pulse"></div>
              Analyzing work experience and skills
            </div>
            <div className="flex items-center gap-2 text-sm text-blue-600">
              <div className="w-2 h-2 bg-blue-400 rounded-full animate-pulse"></div>
              Calculating professional capability scores
            </div>
            <div className="flex items-center gap-2 text-sm text-blue-600">
              <div className="w-2 h-2 bg-blue-400 rounded-full animate-pulse"></div>
              Generating career narratives and recommendations
            </div>
          </div>
        </CardContent>
      </Card>
    );
  }

  // Show trigger button if no enrichment data exists
  if (!enrichment || narratives.length === 0) {
    return (
      <Card className="border-gray-200 bg-gray-50/50">
        <CardHeader>
          <CardTitle className="flex items-center gap-2 text-gray-800">
            <Brain className="w-4 h-4" />
            AI Career Insights
            <AlertCircle className="w-4 h-4 text-gray-500" />
          </CardTitle>
          <CardDescription className="flex items-center gap-2">
            <Info className="w-3 h-3" />
            Generate AI-powered insights from your resume data
          </CardDescription>
        </CardHeader>
        <CardContent className="text-center py-6">
          <Brain className="w-12 h-12 mx-auto text-gray-400 mb-4" />
          <p className="text-gray-600 mb-4">
            Ready to unlock AI-powered insights about your career profile?
          </p>
          <Button 
            onClick={handleTriggerEnrichment} 
            className="flex items-center gap-2"
            disabled={enrichResumeMutation.isPending}
          >
            {enrichResumeMutation.isPending ? (
              <>
                <Loader2 className="w-4 h-4 animate-spin" />
                Generating...
              </>
            ) : (
              <>
                <Sparkles className="w-4 h-4" />
                Generate AI Insights
              </>
            )}
          </Button>
        </CardContent>
      </Card>
    );
  }

  const getScoreVariant = (score: number) => {
    if (score >= 80) return 'default';
    if (score >= 60) return 'secondary';
    return 'outline';
  };

  const getScoreColor = (score: number) => {
    if (score >= 80) return 'text-green-600';
    if (score >= 60) return 'text-yellow-600';
    return 'text-red-600';
  };

  const careerSummary = narratives.find(n => n.narrative_type === 'career_summary');
  const keyStrengths = narratives.find(n => n.narrative_type === 'key_strengths');
  const growthTrajectory = narratives.find(n => n.narrative_type === 'growth_trajectory');

  return (
    <Card className="border-green-200 bg-green-50/50">
      <CardHeader>
        <CardTitle className="flex items-center gap-2 text-green-800">
          <Sparkles className="w-4 h-4" />
          AI Career Insights
          <CheckCircle className="w-4 h-4 text-green-600" />
        </CardTitle>
        <CardDescription className="flex items-center gap-2">
          <Info className="w-3 h-3" />
          Generated by OpenAI {enrichment.model_version || 'GPT-4o'} â€¢ Model confidence: {Math.round((enrichment.confidence_score || 0.9) * 100)}%
        </CardDescription>
      </CardHeader>
      <CardContent className="space-y-4">
        {/* Professional Profile */}
        <div className="space-y-3">
          <div className="flex flex-wrap gap-2">
            <Badge variant="default" className="flex items-center gap-1">
              <Brain className="w-3 h-3" />
              {enrichment.role_archetype}
            </Badge>
            <Badge variant="secondary" className="flex items-center gap-1">
              <Target className="w-3 h-3" />
              {enrichment.persona_type}
            </Badge>
          </div>

          {/* Archetype and Persona Explanations */}
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4 text-xs">
            <div className="p-2 bg-white/60 rounded border-l-2 border-blue-400">
              <div className="font-medium text-blue-800 mb-1">Role Archetype</div>
              <p className="text-gray-700 leading-relaxed">
                {enrichment.role_archetype_explanation}
              </p>
            </div>
            <div className="p-2 bg-white/60 rounded border-l-2 border-purple-400">
              <div className="font-medium text-purple-800 mb-1">Professional Persona</div>
              <p className="text-gray-700 leading-relaxed">
                {enrichment.persona_explanation}
              </p>
            </div>
          </div>
        </div>

        {/* Professional Capability Scores */}
        <div>
          <h4 className="font-medium text-sm mb-3 flex items-center gap-1">
            <TrendingUp className="w-3 h-3" />
            Professional Capability Assessment
          </h4>
          <div className="grid grid-cols-3 gap-4">
            <div className="text-center">
              <div className="flex items-center justify-center gap-1 mb-2">
                <Users className="w-3 h-3" />
                <span className="text-xs font-medium">Leadership</span>
              </div>
              <div className="space-y-1">
                <Badge variant={getScoreVariant(enrichment.leadership_score)} className="text-xs">
                  {enrichment.leadership_score}/100
                </Badge>
                <Progress value={enrichment.leadership_score} className="h-1" />
              </div>
            </div>
            
            <div className="text-center">
              <div className="flex items-center justify-center gap-1 mb-2">
                <Target className="w-3 h-3" />
                <span className="text-xs font-medium">Impact</span>
              </div>
              <div className="space-y-1">
                <Badge variant={getScoreVariant(enrichment.scope_score)} className="text-xs">
                  {enrichment.scope_score}/100
                </Badge>
                <Progress value={enrichment.scope_score} className="h-1" />
              </div>
            </div>
            
            <div className="text-center">
              <div className="flex items-center justify-center gap-1 mb-2">
                <Code className="w-3 h-3" />
                <span className="text-xs font-medium">Technical</span>
              </div>
              <div className="space-y-1">
                <Badge variant={getScoreVariant(enrichment.technical_depth_score)} className="text-xs">
                  {enrichment.technical_depth_score}/100
                </Badge>
                <Progress value={enrichment.technical_depth_score} className="h-1" />
              </div>
            </div>
          </div>
        </div>

        {/* AI-Generated Career Narratives */}
        <div className="space-y-3">
          {/* Career Summary */}
          {careerSummary && (
            <div>
              <h4 className="font-medium text-sm mb-2 flex items-center gap-1">
                <Award className="w-3 h-3" />
                Professional Summary
              </h4>
              <p className="text-sm text-muted-foreground leading-relaxed bg-white/40 p-2 rounded">
                {careerSummary.narrative_text}
              </p>
            </div>
          )}

          {/* Key Strengths */}
          {keyStrengths && (
            <div>
              <h4 className="font-medium text-sm mb-2 flex items-center gap-1">
                <CheckCircle className="w-3 h-3" />
                Key Strengths
              </h4>
              <p className="text-sm text-muted-foreground leading-relaxed bg-white/40 p-2 rounded">
                {keyStrengths.narrative_text}
              </p>
            </div>
          )}

          {/* Growth Trajectory (collapsed by default to save space) */}
          {growthTrajectory && (
            <details className="group">
              <summary className="font-medium text-sm mb-2 flex items-center gap-1 cursor-pointer hover:text-green-700">
                <TrendingUp className="w-3 h-3" />
                Career Growth Analysis
                <span className="text-xs text-gray-500 ml-auto">Click to expand</span>
              </summary>
              <p className="text-sm text-muted-foreground leading-relaxed bg-white/40 p-2 rounded mt-2">
                {growthTrajectory.narrative_text}
              </p>
            </details>
          )}
        </div>

        {/* Model Attribution */}
        <div className="text-xs text-gray-500 pt-2 border-t border-gray-200">
          Analysis powered by OpenAI {enrichment.model_version || 'GPT-4o'} â€¢ 
          Generated at confidence level {Math.round((enrichment.confidence_score || 0.9) * 100)}%
        </div>
      </CardContent>
    </Card>
  );
};
